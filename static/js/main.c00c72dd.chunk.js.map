{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/searcField/SearchField.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","SearchBar","callBack","htmlFor","type","id","placeholder","onChange","event","target","value","App","state","search","searchField","setState","this","length","moviesFromServer","filter","toLowerCase","includes","Component","ReactDOM","render","document","getElementById"],"mappings":"8vEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,WCCKK,EAxBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,yBAAKZ,UAAU,OACb,yBAAKA,UAAU,SACb,2BAAOa,QAAQ,eAAeb,UAAU,SAAxC,gBAIA,yBAAKA,UAAU,WACb,2BACEc,KAAK,OACLC,GAAG,eACHf,UAAU,QACVgB,YAAY,mBACZC,SAAW,SAAAC,GAAK,OAAIN,EAASM,EAAMC,OAAOC,cCVvCC,EAAb,4MACEC,MAAQ,CACNC,OAAQ,IAFZ,EAKEC,YAAc,SAACD,GACb,EAAKE,SAAS,CAAEF,YANpB,uDASY,IAAD,OACP,OACE,yBAAKvB,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAWY,SAAUc,KAAKF,cACK,IAA7BE,KAAKJ,MAAMC,OAAOI,OAChB,kBAAC,EAAD,CAAYrB,OAAQsB,IAEpB,kBAAC,EAAD,CAAYtB,OACVsB,EAAiBC,QAAO,SAACrB,GAGvB,IAFaA,EAAMZ,MAAQY,EAAMX,aAAaiC,cAEtCC,SAAS,EAAKT,MAAMC,QAC1B,OAAOf,QAQnB,yBAAKR,UAAU,WAAf,0BA9BR,GAAyBgC,aCDzBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c00c72dd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchBar = ({ callBack }) => (\n  <div className=\"box\">\n    <div className=\"field\">\n      <label htmlFor=\"search-query\" className=\"label\">\n        Search movie\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id=\"search-query\"\n          className=\"input\"\n          placeholder=\"Type search word\"\n          onChange={(event => callBack(event.target.value))}\n        />\n      </div>\n    </div>\n  </div>\n);\n\nSearchBar.propTypes = {\n  callBack: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\nimport SearchBar from './components/searcField/SearchField';\n\nexport class App extends Component {\n  state = {\n    search: '',\n  };\n\n  searchField = (search) => {\n    this.setState({ search });\n  };\n\n  render() {\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <SearchBar callBack={this.searchField} />\n          {(this.state.search.length === 0)\n            ? <MoviesList movies={moviesFromServer} />\n            : (\n              <MoviesList movies={\n                moviesFromServer.filter((movie) => {\n                  const str = (movie.title + movie.description).toLowerCase();\n\n                  if (str.includes(this.state.search)) {\n                    return movie;\n                  }\n                })\n              }\n              />\n            )\n          }\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}